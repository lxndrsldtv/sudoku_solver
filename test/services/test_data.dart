// hard (https://habr.com/ru/post/173795/)
// A Sudoku designed to work against the brute force algorithm
final List<int> sudokuHard_1 = [
  0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 3, 0, 8, 5,
  0, 0, 1, 0, 2, 0, 0, 0, 0,
  0, 0, 0, 5, 0, 7, 0, 0, 0,
  0, 0, 4, 0, 0, 0, 1, 0, 0,
  0, 9, 0, 0, 0, 0, 0, 0, 0,
  5, 0, 0, 0, 0, 0, 0, 7, 3,
  0, 0, 2, 0, 1, 0, 0, 0, 0,
  0, 0, 0, 0, 4, 0, 0, 0, 9
];

// simple (filling with singletons)
final List<int> sudokuSimple = [
   9, 2, 1, 7, 0, 6, 3, 4, 5,
   0, 0, 0, 1, 0, 0, 6, 0, 0,
   6, 8, 0, 0, 5, 3, 9, 0, 2,
   0, 0, 5, 2, 0, 1, 0, 0, 9,
   7, 0, 0, 0, 6, 0, 0, 0, 0,
   1, 3, 2, 8, 9, 0, 0, 0, 0,
   0, 1, 9, 0, 0, 0, 0, 0, 0,
   0, 0, 3, 0, 0, 8, 0, 0, 0,
   5, 0, 6, 3, 4, 0, 8, 0, 1
];

// hard (seems)
final List<int> sudokuHard = [
   0, 0, 0, 3, 0, 7, 0, 0, 0,
   0, 1, 0, 4, 0, 0, 6, 0, 0,
   7, 0, 0, 0, 0, 0, 0, 9, 0,
   9, 0, 0, 0, 0, 0, 5, 0, 7,
   0, 7, 3, 1, 6, 0, 0, 0, 4,
   0, 0, 0, 0, 0, 0, 0, 0, 6,
   0, 8, 0, 0, 0, 1, 4, 0, 0,
   0, 6, 0, 0, 7, 5, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 2
];

